:numbered:
== FERMAT: a platform stack system


*FERMAT* is, technically speaking , an Open Source P2P (Peer-to-Peer) Platform Stack System built on a Plug-in Architecture running on end-user's devices. 

 
=== What makes FERMAT different from other wallet platforms or services?

* **FERMAT is P2P.** This makes it censorship resistent and difficult to be attacked.

* **FERMAT is built with plugins.** This enables functionality to be reused and opens the door to any developer to participate.

* **FERMAT is inclusive.** By creating their own plugins, current industry members can integrate with FERMAT to offer their services and products to FERMAT user base. 

* **FERMAT runs on end users' devices.** This enables users to hold their own money eliminating the need to trust a third party. 

* **FERMAT segments the world population and offers a custom tailored solution for each segment.** Any developer can easily create niche wallets for a particular group of people. Brands can create their own wallets for their followers. All the heavy lifting is done by the FERMAT platform.

* *FERMAT guaratees plugins and wallet developers a revenue stream.* FERMAT implements an innovative business model which allows plugins and wallet developers to define a use license, and FERMAT itself enforces this license on behalf of developers. )

The first goal is to get very close to the *end user* offering and easy way of coming onboard the crytocurrency world by means of possesing a digital *wallet* running on his preferred device. +
At the same time, the open source *plug-in platform* allows any skilled actor in the community to jump in and develop applications and offer services with different abstraction levels and addressing a wide range of segmented markets. In fact, as we have seen in the section about FERMAT as a _master plan_, the possibility of using the existent global talent and intelligence that the community already has in a clever collaborative way, can rapidily expand this technology to mass adoption. + 
Instead of beginning a new project in this industry completley from scratch, the clear and firm logic of FERMAT can make it a new standard in the industry, giving the collective a strong and stabile group coherence it had never experienced before. All participants in the different sectors get , because of FERMAT's transparency, clear logic and solid foundations, a sense of trust, safety and equity, and the corresponding right to become a revenue for each one's contribution and effort.


=== What characteristics has FERMAT as a software system ?
*FERMAT* is 

* OPEN SOURCE
The code can be reviewed and audited by anyone.

* DECENTRALIZED
It runs on end users’ devices.

* PUBLIC
Anybody can connect to the Fermat P2P network and use its services. Anybody can write plug-ins for its platforms.

* OPEN
Anybody can participate and innovate without requiring permission.

* INCLUSIVE
Any existing crypto service running outside the Fermat network / platform can be integrated and consumed from within the network.

* OPEN STANDARD
Can be freely adopted, implemented and extended.

=== What is FERMAT made of ?

.Types of components
* *libraries*: structural components of the core of the system (low level layers) (FERMAT-CORE - FERMAT-API) 
* *desktops*: applications that run on an specific Operating System and present the graphic user interface.
* *plug-ins*: components which encapsulates a very specific sets of functions, consum services from other components and offer a public interface for the services they provide to other components.
* *add-ons*: these are plug-ins in the low level layers that provide the most sensitive functionalities to the system, and therefore are developed by trusted developers, while plug-ins are open to the general development community to be developed. +

[[architecture]]
=== FERMAT's architecture 

:numbered!:

FERMAT as a system is built on several overlapping architectural paradigms: 

At a higher level, it is a Peer to Peer system with asymetric nodes, meaning that each node even having all the code base, it specializes itself according to the profile of the end user or the way it was configured.

Inside each node FERMAT features a Multi-OS architecture meaning that the lowest level OS-dependent components are wrapped in a way that can be easily replaced when running on a different OS without affecting the rest of the components consuming services from them. The upmost components, the ones facing the end user (GUI) are also OS-dependent. Everything in between is *not*.

At the same time it features a plugins architecture inserted into a multi-layered structure. These layers are ocasionally grouped into *Superlayers*. 

These Plugins are subdivided into a hierarchy of *Platforms*. Those *Platforms* shares a common set of layers, and each one adds *Actors* and *Products* to the overall functionallity of the FERMAT system.

Inside each Plugin, you might find a specialized structure and in many cases a database or files belonging to that plugin.

At a system level, FERMAT uses speciallized crawlers to collect or sometimes inject information into nodes in order to recreate a system level conciousness prepeared to resist attacks or other relevant issues.

==== p2p architecture
FERMAT is a decentralized system, so it needs to stablish a connection between every actor and every device using it, and this is done by creating a P2P-NETWORK between them, based on the services provided by _FERMAT P2P Network and Communication Superlayer_. +
There are certain *Layers* that provide services at a system-wide scale (see <<superlayers>>), but other layers are constraint within one *platform* (see <<platformDescription>>) and the layer's modules interact to render the platform the set of specific functionalities it was built for.

==== multi OS architecture
FERMAT is *code-base portable*, meaning that the components are written in code that runs in different operating systems. 
So, through FERMAT-OSA (FERMAT OPERATING SYSTEM API) , the components that are specific to a given Operating System connect to the rest of FERMAT that is OS independent.

[[multilayer]]
==== multilayer architecture
FERMAT needs to be adaptable, to provide highly component reutilisation, and to offer a scalability that match the complexity of the service that is running on it. Therefore the components are set in *layers* stacking one over the other. Each layer groups components that provide a similar functionality, eg. communications layer is designed to provide a way to connect one device to another building a "communications channel" using different available tecnologies ( cloud servers, wifi, NFT, etc), and in performing this task, it let other components from other layers do their specific task consumming services of this communication layer in a transparent way, without any concern on how the communication is actually being stablished. +
There are certain *Layers* that provide services at a system-wide scale (see *superlayers*), but other layers are defined within one *platform* and its modules offer and consume services to allow the platform offer its set of specific functionalities.

==== plug-ins architecture

*Plug-ins* have an outstanding feature: as long as theier INTERFACE (i.e. the shape of the interconnection) is known and public, the plug-in can interact with others, consuming and offering services, INDEPENDENTLY of its inner structure and how it is built. As long as they conserve this INTERFACE, they can safely evolve to more efficient functioning WITHOUT altering a single service that has been built upon it ! 
Inside FERMAT, each plug-in is given certain specific responsability within the whole, it lives in a certain layer, and it is allowed to consume services of components on _lower layers_ and to provide services to components of _upper layers_. Plug-ins participate in high level processes and they are programmed in a way to live in an uncontrolled environment (end user devices) and to co-exist with untrusted third party plug-ins as well. 

NOTE: FERMAT'S core concept of providing REUSABLE COMPONENTS is based on this *plug-in/add-on architecture*.

Through its plug-ins, FERMAT is able to connect and reuse most of the infrastructure deployed by the industry.


==== platform architecture
A *platform* consists of a group of components living in different *layers* interconnected to offer a specific set of services for a discovered niche. For example, if we address to cryptocurrency users, we will need a _crytocurrency wallet_ for each cryptocurrency available running on FERMAT Crypto Currency Platform. This wallet would operate on the selected cryptonetwork by means of a connection to it provided by the Block Chain Platform, and will interact with the user by means of an *desktop* living in the OS specific layers. 


.General overview on FERMAT'S platforms and superlayers.
. *FERMAT Core Platform* 
. *FERMAT Operating Systems Superlayer*
. *FERMAT BlockChain Superlayer*
. *FERMAT P2P Network and Communication Superlayer*
. *FERMAT Plug-ins Platform*
. *FERMAT Wallet Production & Distribution Platform*
. *FERMAT Crypto Currency Platform*
. *FERMAT Crypto Commodity Money*
. *FERMAT Bank Notes Platform*
. *FERMAT Shop Platform*
. *FERMAT Digital Assets Platform*
. *FERMAT Marketing Platform*
. *FERMAT Cash Money Platform*
. *FERMAT Bank Money Platform*
. *FERMAT Crypto Brokers Platform*
. *FERMAT Crypto Distribution Network*
. *FERMAT Distributed Private Network*


:numbered:

=== FERMAT'S actors
Cryptocurrencies live in a public and distributed ledger, the *blockchain*, in a decentralized p2p network (spread in every network node). + 
They are held and stored by their owners in specific applications called *wallets* living in a certain device which has access to the corresponding cryptonetwork. +
*Wallets* store the owner's _privat key_ and the corresponding _public key_ to unlock the cryptocurrency amount of a given *transaction*. + 
For a *transaction* to take place, a *crypto address* is needed to identify both the sender of the value as well as the receiver. + 
*Crypto addresses* are generated by the wallet derived from the _privat/public key_ pair of the wallet's owner. +
Although *wallets* are similar in relationship to their basic functionalities, the _natural segmentation of the world population_ and the specific demand of every segment requires to be taken into account when designing *wallets*. +
FERMAT defines different system *actors* to identify the specific needs and level of abstraction required to each actor, and consequently being able to design FERMAT's products with the appropiated orientation.
 

:numbered!:

==== segmentation 
FERMAT understands that there exists on the world so many different tastes and preferences like humans exists on earth, because each one is _unique_, and therefore there are potentially a huge number of differents ways of shaping the applications being developed, considering its functionalities, accessibility, and appearance among other various customizable characteristics, although they are conceived to deal with the same tasks of managing cryptocurrencies and blockchain technology.  + 
Here begins the huge differentation between FERMAT applications and the rest ! + 
FERMAT takes very _seriously_ into account the _actor's profile_ to develop attractive applications in each case to match very specificaly the demand of each consumer's niche. For instance, some actors with a more complex relationships world require more complexity in their wallets and in the wallet of his partners.

==== levels of abstraction
On the other hand, while certain actors need basic operations, other's use of blockchain technology may demand higher levels of abstraction.
For instance, low abstraction is needed for user that only need to see their value in *cryptocurrency*. Others may want to have their wallets showing them their content in *fiat money*. Others might need some functionalities that prevent them for *losing value* depending on the exchange rate they purchased the currency and when they want to spend it, and some of them would like even to see the profitable exchange rate as a *discount* obtained in the purchase of goods.. There are also many who will only serve themselves of the cryptonetwork not to transport value, but to issue *digital assets* instead, assets that are made public through the blockchain ledger... + 
All this different _*abstraction levels*_ are possible within FERMAT, and FERMAT multi-platform system is specifically designed to match this increasing demand in the industry, and at the same time, the use of FERMAT'S products foster the creation of real-world environments, connecting in a very efficient, secure, and scalable way, the actors offering services with those consuming them.


==== Overview of FERMAT's products and their actors

FERMAT WALLET FACTORY ::   -> for marketers to re-brand any of the already existing segment specific wallets in a few steps (without the need to deal with the source code of the base wallet selected!)
FERMAT WALLET PUBLISHER ::  -> for wallet designers/marketing agency to offer their rebranded Wallet to the world !
FERMAT WALLET STORE ::  -> the store where available wallets live, ready to be adopted !
FERMAT BITCOIN WALLET :: -> for those devoted "BTC-only" users!
FERMAT BITCOIN LOSS PROTECTED WALLET -> for conservative user's caring about never selling under the purchase price ! (preserving value!)
FERMAT ARGENTINE BLP WALLET :: -> for citizen's of the nr.1 potential mass market for BTC (designed to match argentine culture of steady comparison between argentine$, USD (oficial and blue!) and even Eu$!)
FERMAT CRYPTO COMMODITY MONEY WALLET :: ->
FERMAT DISCOUNT WALLET :: -> for discount and bonus chasers! ( recommend selling when price gets convinient, and shows it as a " discount" !)*
FERMAT BANK NOTES  WALLET :: -> for those wanting to visualize their investment in "real money traditional bank notes" of their usual fiat/currency ( rest on FERMAT, we do the "dirty work" with all the crypto stuff!)*
FERMAT SHOP WALLET :: -> *for shop owners who accept cryptocurrency in payment of their products !*
FERMAT BRAND WALLET :: -> *for brands owners who accept cryptocurrency in their retailers network.*
FERMAT RETAILER WALLET :: -> *for* 
FERMAT ASSET ISSUER WALLET :: -> for company or brand that issues a Digital Assets to offer to their customers*
FERMAT ASSET USER  WALLET :: -> for *the customer who accepts/obtain some Digital Assets according to his interests*
FERMAT REDEEM POINT WALLET :: -> for the place/shop/person that exchanges the Asset for a certain service or product (redeems it).*
FERMAT VOUCHER WALLET :: -> for 
FERMAT COUPON WALLET :: -> for 
FERMAT DISCOUNT WALLET :: -> for 
FERMAT CRYPTO BROKER WALLET :: -> for persons/organizations whose business activity is exchanging cryptocurrency for fiat-money
FERMAT CRYPTO BROKER'S USER WALLET ::  ->  for customers of the cryptobroker
FERMAT CRYPTO WHOLESALER WALLET :: -> for organizations owing a certain large amount of crypto-credit to sell through a distribution chain.
FERMAT CRYPTO DISTRIBUTOR WALLET :: -> for those who form the next level in the distribution, buying to wholesalers and re-selling to Top Up Point
FERMAT TOP UP POINT WALLET :: -> for shops/organizations/persons who transfer crypto-credit in exchange for fiat-money (receives money - gives crypto)
FERMAT CASH OUT POINT WALLET :: -> for shops/organizations/persons who gives out money in exchange for a transfer of crypto (receive crypto - gives money)


For a cool visualization of the constant growing system of platforms and superlayers visit http://fermat.org





